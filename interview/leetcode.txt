тЬЕ 1. Two Sum
ЁЯФ╣ Problem: Find two numbers that add up to a target.

ЁЯУШ English: You're given an array and a target. Return the indices of the two numbers that add up to the target.

ЁЯУЩ Hindi: рдЖрдкрдХреЛ рдПрдХ array рдФрд░ рдПрдХ target рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред рдЖрдкрдХреЛ рдЙрди рджреЛ numbers рдХреЗ index рд╡рд╛рдкрд╕ рдХрд░рдиреЗ рд╣реИрдВ рдЬрд┐рдирдХрд╛ рдЬреЛрдбрд╝ target рдХреЗ рдмрд░рд╛рдмрд░ рд╣реЛред

python
Copy
Edit
def twoSum(nums, target):
    hashmap = {}
    for i, num in enumerate(nums):
        diff = target - num
        if diff in hashmap:
            return [hashmap[diff], i]
        hashmap[num] = i
тЬЕ 2. Reverse a String
ЁЯФ╣ Problem: Reverse the input string.

ЁЯУШ English: Take a string and return its reverse.

ЁЯУЩ Hindi: рдПрдХ string рд▓реЛ рдФрд░ рдЙрд╕реЗ рдЙрд▓реНрдЯрд╛ (reverse) рдХрд░рдХреЗ рд╡рд╛рдкрд╕ рдХрд░реЛред

python
Copy
Edit
def reverseString(s):
    return s[::-1]
тЬЕ 3. Palindrome Number
ЁЯФ╣ Problem: Check if a number is a palindrome.

ЁЯУШ English: A number is a palindrome if it reads the same forward and backward (like 121).

ЁЯУЩ Hindi: рдХреЛрдИ рд╕рдВрдЦреНрдпрд╛ Palindrome рд╣реИ рдЕрдЧрд░ рд╡реЛ рдЖрдЧреЗ рд╕реЗ рдФрд░ рдкреАрдЫреЗ рд╕реЗ рдкрдврд╝рдиреЗ рдкрд░ рдПрдХ рдЬреИрд╕реА рд╣реЛ (рдЬреИрд╕реЗ 121)ред

python
Copy
Edit
def isPalindrome(x):
    return str(x) == str(x)[::-1]
тЬЕ 4. Valid Anagram
ЁЯФ╣ Problem: Check if two strings are anagrams.

ЁЯУШ English: Two strings are anagrams if they contain the same characters in a different order.

ЁЯУЩ Hindi: рджреЛ strings anagram рд╣реЛрддреА рд╣реИрдВ рдЕрдЧрд░ рджреЛрдиреЛрдВ рдореЗрдВ рд╡рд╣реА рдЕрдХреНрд╖рд░ рд╣реЛрдВ рд▓реЗрдХрд┐рди рдХреНрд░рдо рдЕрд▓рдЧ рд╣реЛред

python
Copy
Edit
def isAnagram(s, t):
    return sorted(s) == sorted(t)
тЬЕ 5. Maximum Subarray (Kadane's Algorithm)
ЁЯФ╣ Problem: Find the subarray with the maximum sum.

ЁЯУШ English: Given an array, find the continuous subarray that gives the highest sum.

ЁЯУЩ Hindi: Array рдореЗрдВ рд╕реЗ рд╡рд╣ рд╣рд┐рд╕реНрд╕рд╛ (subarray) рдвреВрдВрдвреЛ рдЬрд┐рд╕рдХрд╛ рдЬреЛрдбрд╝ рд╕рдмрд╕реЗ рдЬреНрдпрд╛рджрд╛ рд╣реЛред

python
Copy
Edit
def maxSubArray(nums):
    max_sum = current = nums[0]
    for num in nums[1:]:
        current = max(num, current + num)
        max_sum = max(max_sum, current)
    return max_sum
тЬЕ 6. Merge Two Sorted Lists
ЁЯФ╣ Problem: Merge two sorted linked lists.

ЁЯУШ English: Combine two sorted linked lists into one sorted list.

ЁЯУЩ Hindi: рджреЛ sorted linked lists рдХреЛ рдорд┐рд▓рд╛рдХрд░ рдПрдХ sorted list рдмрдирд╛рдУред

python
Copy
Edit
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def mergeTwoLists(l1, l2):
    dummy = ListNode()
    tail = dummy
    while l1 and l2:
        if l1.val < l2.val:
            tail.next = l1
            l1 = l1.next
        else:
            tail.next = l2
            l2 = l2.next
        tail = tail.next
    tail.next = l1 or l2
    return dummy.next
тЬЕ 7. Best Time to Buy and Sell Stock
ЁЯФ╣ Problem: Maximize profit by buying and selling once.

ЁЯУШ English: Buy low, sell high. Return the maximum profit possible.

ЁЯУЩ Hindi: рдПрдХ рдмрд╛рд░ рдЦрд░реАрджреЛ рдФрд░ рдПрдХ рдмрд╛рд░ рдмреЗрдЪреЛ рддрд╛рдХрд┐ рдЬреНрдпрд╛рджрд╛ рдореБрдирд╛рдлрд╛ рд╣реЛ рд╕рдХреЗред

python
Copy
Edit
def maxProfit(prices):
    min_price = float('inf')
    profit = 0
    for price in prices:
        min_price = min(min_price, price)
        profit = max(profit, price - min_price)
    return profit
тЬЕ 8. Remove Duplicates from Sorted Array
ЁЯФ╣ Problem: Remove duplicates in-place from a sorted array.

ЁЯУШ English: From a sorted array, remove all duplicate elements.

ЁЯУЩ Hindi: рдПрдХ sorted array рд╕реЗ рд╕рд╛рд░реЗ duplicate рд╣рдЯрд╛рдУ, рд▓реЗрдХрд┐рди рдЙрд╕реА array рдореЗрдВ (in-place)ред

python
Copy
Edit
def removeDuplicates(nums):
    if not nums:
        return 0
    i = 0
    for j in range(1, len(nums)):
        if nums[j] != nums[i]:
            i += 1
            nums[i] = nums[j]
    return i + 1
тЬЕ 9. Valid Parentheses
ЁЯФ╣ Problem: Check if brackets are balanced.

ЁЯУШ English: Make sure each opening bracket has a closing pair.

ЁЯУЩ Hindi: рд╣рд░ opening bracket рдХреЗ рд▓рд┐рдП рдПрдХ matching closing bracket рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдПред

python
Copy
Edit
def isValid(s):
    stack = []
    mapping = {')':'(', ']':'[', '}':'{'}
    for char in s:
        if char in mapping:
            top = stack.pop() if stack else '#'
            if mapping[char] != top:
                return False
        else:
            stack.append(char)
    return not stack
тЬЕ 10. Climbing Stairs
ЁЯФ╣ Problem: You can climb 1 or 2 steps at a time. How many ways to reach the top?

ЁЯУШ English: Classic dynamic programming problem. Like Fibonacci.

ЁЯУЩ Hindi: рдПрдХ рдмрд╛рд░ рдореЗрдВ 1 рдпрд╛ 2 рд╕реНрдЯреЗрдк рдЪрдврд╝ рд╕рдХрддреЗ рд╣реЛред рдЯреЙрдк рддрдХ рдкрд╣реБрдБрдЪрдиреЗ рдХреЗ рдХрд┐рддрдиреЗ рддрд░реАрдХреЗ рд╣реИрдВ?

python
Copy
Edit
def climbStairs(n):
    if n <= 2:
        return n
    first, second = 1, 2
    for _ in range(3, n+1):
        first, second = second, first + second
    return second